// Бинарный поиск предназначен только для отсортированного списка

const binary = (el, arr) => {                                                           // Принимаем искомый элемент и отсортированный массив

    if (!Array.isArray(arr)) return new Error("Type of 'arr' is not an array");         // Если наш массив не массив, тогда выдаем ошибку
    
    if (!arr.reduce((n, item) => n !== false && item >= n && item)) {                   // Выдаем ошибку если массив не отсортирован

        return new Error("Your array is unsorted");

    }

    let start = 0, middle, end = arr.length - 1;                                        // Назначим начало, конец и неопределенный пока что цент массива 

    while (start <= end) {                                                              // Ставим цикл пока наши индексы не сойдутся

        middle = Math.floor((start + end) / 2);                                         // Вычислим центр

        if (el === arr[middle]) {                                                       // Если центальный элемент нужный

            return middle;                                                              // Возращаем его  индекс

        } else if (el > arr[middle]) {                                                  // Иначе сравниваем если нужный элемент больше цетрального, меняем

            start = middle + 1;                                                         // Начальный индекс на увеличенный центральный, в итоге делим масив 

        } else {

            end = middle - 1;                                                           // Иначе получаем другую часть массива и начинаем заново

        }

    }

    return -1;                                                                          // Если элемент не найден возвращаем -1

}

console.log(binary(6, [1, 10, 2, 3, 5, 6, 7]));